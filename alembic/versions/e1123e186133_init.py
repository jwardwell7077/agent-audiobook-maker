"""Initial database schema.

Revision ID: e1123e186133
Revises: None
Create Date: 2025-08-11 15:09:08.166298

Alembic auto-generated migration establishing baseline tables.
"""

from __future__ import annotations

import sqlalchemy as sa  # noqa: F401

from alembic import op  # noqa: F401

# revision identifiers, used by Alembic.
revision = "e1123e186133"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Apply the initial schema (create all application tables)."""
    # ### commands auto generated by Alembic - may be edited ####
    op.create_table(
        "annotations",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.Column("chapter_id", sa.String(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("records", sa.JSON(), nullable=False),
        sa.Column("stats", sa.JSON(), nullable=True),
        sa.Column("text_sha256", sa.String(), nullable=False),
        sa.Column("params_sha256", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_annotations_book_chapter", "annotations", ["book_id", "chapter_id"], unique=False)
    op.create_index(op.f("ix_annotations_book_id"), "annotations", ["book_id"], unique=False)
    op.create_index(op.f("ix_annotations_chapter_id"), "annotations", ["chapter_id"], unique=False)
    op.create_table(
        "books",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("author", sa.String(), nullable=True),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "characters",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("aliases", sa.JSON(), nullable=True),
        sa.Column("profile", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_characters_book_id"), "characters", ["book_id"], unique=False)
    op.create_table(
        "jobs",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=True),
        sa.Column("chapter_id", sa.String(), nullable=True),
        sa.Column("stage", sa.String(), nullable=True),
        sa.Column("params", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("finished_at", sa.DateTime(), nullable=True),
        sa.Column("logs_ptr", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_jobs_book_id"), "jobs", ["book_id"], unique=False)
    op.create_index(op.f("ix_jobs_chapter_id"), "jobs", ["chapter_id"], unique=False)
    op.create_table(
        "metrics",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("scope", sa.String(), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("value", sa.Float(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "renders",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.Column("chapter_id", sa.String(), nullable=False),
        sa.Column("path", sa.Text(), nullable=False),
        sa.Column("loudness_lufs", sa.Float(), nullable=True),
        sa.Column("peak_dbfs", sa.Float(), nullable=True),
        sa.Column("duration_s", sa.Float(), nullable=True),
        sa.Column("hashes", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_renders_book_id"), "renders", ["book_id"], unique=False)
    op.create_index(op.f("ix_renders_chapter_id"), "renders", ["chapter_id"], unique=False)
    op.create_table(
        "stems",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.Column("chapter_id", sa.String(), nullable=False),
        sa.Column("utterance_idx", sa.Integer(), nullable=False),
        sa.Column("path", sa.Text(), nullable=False),
        sa.Column("duration_s", sa.Float(), nullable=True),
        sa.Column("tts_profile_id", sa.String(), nullable=True),
        sa.Column("hashes", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_stems_book_chapter_utt", "stems", ["book_id", "chapter_id", "utterance_idx"], unique=False)
    op.create_index(op.f("ix_stems_book_id"), "stems", ["book_id"], unique=False)
    op.create_index(op.f("ix_stems_chapter_id"), "stems", ["chapter_id"], unique=False)
    op.create_table(
        "chapters",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("book_id", sa.String(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("text_sha256", sa.String(), nullable=False),
        sa.Column("payload", sa.JSON(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["books.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("book_id", "index", name="uq_chapter_book_index"),
    )
    op.create_index("ix_chapters_book_chapter", "chapters", ["book_id", "id"], unique=False)
    op.create_index(op.f("ix_chapters_book_id"), "chapters", ["book_id"], unique=False)
    op.create_index(op.f("ix_chapters_text_sha256"), "chapters", ["text_sha256"], unique=False)
    op.create_table(
        "tts_profiles",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("character_id", sa.String(), nullable=False),
        sa.Column("engine", sa.String(), nullable=False),
        sa.Column("settings", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["characters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Revert the initial schema (drop all application tables)."""
    # ### commands auto generated by Alembic - may be edited ####
    op.drop_table("tts_profiles")
    op.drop_index(op.f("ix_chapters_text_sha256"), table_name="chapters")
    op.drop_index(op.f("ix_chapters_book_id"), table_name="chapters")
    op.drop_index("ix_chapters_book_chapter", table_name="chapters")
    op.drop_table("chapters")
    op.drop_index(op.f("ix_stems_chapter_id"), table_name="stems")
    op.drop_index(op.f("ix_stems_book_id"), table_name="stems")
    op.drop_index("ix_stems_book_chapter_utt", table_name="stems")
    op.drop_table("stems")
    op.drop_index(op.f("ix_renders_chapter_id"), table_name="renders")
    op.drop_index(op.f("ix_renders_book_id"), table_name="renders")
    op.drop_table("renders")
    op.drop_table("metrics")
    op.drop_index(op.f("ix_jobs_chapter_id"), table_name="jobs")
    op.drop_index(op.f("ix_jobs_book_id"), table_name="jobs")
    op.drop_table("jobs")
    op.drop_index(op.f("ix_characters_book_id"), table_name="characters")
    op.drop_table("characters")
    op.drop_table("books")
    op.drop_index(op.f("ix_annotations_chapter_id"), table_name="annotations")
    op.drop_index(op.f("ix_annotations_book_id"), table_name="annotations")
    op.drop_index("ix_annotations_book_chapter", table_name="annotations")
    op.drop_table("annotations")
    # ### end Alembic commands ###
