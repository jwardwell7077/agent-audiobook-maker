default_language_version:
  python: python3.12

default_install_hook_types:
  - pre-commit
  - pre-push
  - commit-msg

repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.10
    hooks:
      - id: ruff-format
      - id: ruff
        args: ["--fix"]

  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.22
    hooks:
      - id: mdformat
        args: ["--wrap", "no"]
        files: "\\.md$"
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter

  - repo: https://github.com/jackdewinter/pymarkdown
    rev: v0.9.32
    hooks:
      - id: pymarkdown
        args:
          - --config=pymarkdown.json
          - --return-code-scheme
          - minimal
          - scan

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        args: ["--strict"]
        files: ^src/

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
        # Preserve two-space Markdown hard line breaks instead of stripping them,
        # which otherwise fights with mdformat and causes edit loops.
        args: ["--markdown-linebreak-ext=md,mdx,mmd"]

  - repo: local
    hooks:
      - id: commit-message-guard
        name: Commit Message Guard (single Fixes #ID, subject <=72)
        entry: bash scripts/validate_commit_message.sh
        language: system
        stages: [commit-msg]
        pass_filenames: true

      - id: quality-gate
        name: Quality Gate (ruff, docstrings=100%, coverage=100%)
        entry: bash -lc 'make quality_gate'
        language: system
        pass_filenames: false
        stages: [push]

      - id: prevent-private-data
        name: Prevent Private Data (data/** except SAMPLE_BOOK; block media)
        entry: bash scripts/prevent_private_data.sh
        language: system
        pass_filenames: true
        stages: [commit]

      - id: banned-tokens
        name: Banned Tokens (reject sensitive series names)
        entry: bash scripts/banned_token_scan.sh
        language: system
        pass_filenames: true
        stages: [commit]

      - id: check-added-large-files
        name: Check Added Large Files (>= 20MB)
        entry: bash -lc 'git diff --cached --name-only --diff-filter=A | xargs -r -I {} bash -lc "[ -f '{}' ] && [ $(stat -c%s '{}') -ge 20971520 ] && echo 'Large file blocked: {}' && exit 1 || true"'
        language: system
        pass_filenames: false
        stages: [commit]

      - id: docs-link-check
        name: Docs Link Check (local relative links)
        entry: bash -lc 'python scripts/check_docs_links.py'
        language: system
        pass_filenames: false
        files: ^docs/.*\.md$
        stages: [commit, push]

      - id: docs-lint
        name: Docs Lint (mdformat check + PyMarkdown)
        entry: bash -lc 'make docs_lint'
        language: system
        pass_filenames: false
        files: ^docs/.*\.md$
        stages: [commit, push]
