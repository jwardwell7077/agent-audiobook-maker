{
  "data": {
    "edges": [
      {
        "id": "edge-loader-to-iterator",
<<<<<<< HEAD
        "source": "ABMEnhancedChapterLoader-L1",
        "sourceHandle": "chunked_data",
        "target": "ABMBlockIterator-I1",
        "targetHandle": "chunked_data",
=======
        "source": "ABMChapterLoader-L1",
        "sourceHandle": "blocks_data",
        "target": "ABMBlockIterator-I1",
        "targetHandle": "blocks_data",
>>>>>>> origin/langflow-multi-implement
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
<<<<<<< HEAD
            "fieldName": "chunked_data",
            "id": "chunked_data",
=======
            "fieldName": "blocks_data",
            "id": "blocks_data",
>>>>>>> origin/langflow-multi-implement
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
<<<<<<< HEAD
            "fieldName": "chunked_data",
            "id": "chunked_data",
=======
            "fieldName": "blocks_data",
            "id": "blocks_data",
>>>>>>> origin/langflow-multi-implement
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-iterator-to-classifier",
        "source": "ABMBlockIterator-I1",
        "sourceHandle": "current_utterance",
        "target": "ABMDialogueClassifier-C1",
        "targetHandle": "utterance",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "current_utterance",
            "id": "current_utterance",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "utterance",
            "id": "utterance",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-classifier-to-attrib",
        "source": "ABMDialogueClassifier-C1",
        "sourceHandle": "classification_result",
        "target": "ABMSpeakerAttribution-A1",
        "targetHandle": "classification_result",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "classification_result",
            "id": "classification_result",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "classification_result",
            "id": "classification_result",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-attrib-to-aggregator",
        "source": "ABMSpeakerAttribution-A1",
        "sourceHandle": "attribution_result",
        "target": "ABMResultsAggregator-G1",
        "targetHandle": "attribution_result",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "attribution_result",
            "id": "attribution_result",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "attribution_result",
            "id": "attribution_result",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-aggregator-to-normalizer",
        "source": "ABMResultsAggregator-G1",
        "sourceHandle": "aggregated_results",
        "target": "ABMResultsToUtterances-U1",
        "targetHandle": "aggregated_results",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "aggregated_results",
            "id": "aggregated_results",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "aggregated_results",
            "id": "aggregated_results",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-normalizer-to-writer",
        "source": "ABMResultsToUtterances-U1",
        "sourceHandle": "utterances_data",
        "target": "ABMAggregatedJsonlWriter-W1",
        "targetHandle": "utterances_data",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "utterances_data",
            "id": "utterances_data",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "utterances_data",
            "id": "utterances_data",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-normalizer-to-casting",
        "source": "ABMResultsToUtterances-U1",
        "sourceHandle": "utterances_data",
        "target": "ABMCastingDirector-CD1",
        "targetHandle": "utterances_data",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "utterances_data",
            "id": "utterances_data",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "utterances_data",
            "id": "utterances_data",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-casting-to-utt-writer",
        "source": "ABMCastingDirector-CD1",
        "sourceHandle": "casted_utterances",
        "target": "ABMUtteranceJsonlWriter-UW1",
        "targetHandle": "written_data_in",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "casted_utterances",
            "id": "casted_utterances",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "written_data_in",
            "id": "written_data_in",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      },
      {
        "id": "edge-utt-writer-to-pg",
        "source": "ABMUtteranceJsonlWriter-UW1",
        "sourceHandle": "written_data",
        "target": "ABMPostgresClient-PG1",
        "targetHandle": "params",
        "type": "default",
        "data": {
          "sourceHandle": {
            "dataType": "Data",
            "fieldName": "written_data",
            "id": "written_data",
            "output_types": [
              "Data"
            ]
          },
          "targetHandle": {
            "dataType": "Data",
            "fieldName": "params",
            "id": "params",
            "input_types": [
              "Data"
            ],
            "output_types": [
              "Data"
            ]
          }
        }
      }
    ],
    "nodes": [
      {
<<<<<<< HEAD
        "id": "ABMEnhancedChapterLoader-L1",
=======
        "id": "ABMChapterLoader-L1",
>>>>>>> origin/langflow-multi-implement
        "type": "genericNode",
        "position": {
          "x": 40,
          "y": 40
        },
        "selected": false,
        "data": {
<<<<<<< HEAD
          "id": "ABMEnhancedChapterLoader-L1",
          "type": "ABMEnhancedChapterLoader",
          "showNode": true,
          "node": {
            "display_name": "ABM Enhanced Chapter Loader",
            "description": "Load chapter and emit paragraph blocks with context",
=======
          "id": "ABMChapterLoader-L1",
            "type": "ABMChapterLoader",
            "showNode": true,
            "node": {
              "display_name": "ABM Chapter Loader",
              "description": "Unified loader: chapters/chapter/blocks",
>>>>>>> origin/langflow-multi-implement
            "icon": "book-open",
              "outputs": [
                {
                  "allows_loop": false,
                  "cache": true,
<<<<<<< HEAD
                "display_name": "Chunked Chapter Data",
                  "group_outputs": false,
                  "method": "load_and_chunk_chapter",
                  "name": "chunked_data",
=======
                "display_name": "Blocks Data",
                  "group_outputs": false,
                  "method": "load_and_blocks",
                  "name": "blocks_data",
>>>>>>> origin/langflow-multi-implement
                "selected": "Data",
                  "tool_mode": true,
                  "types": [
                    "Data"
                  ],
                  "value": "__UNDEFINED__"
                }
              ],
              "template": {
                "_type": "Component",
                "book_name": {
                  "_input_type": "StrInput",
                  "display_name": "Book Name",
                  "type": "str",
                  "value": "mvs",
                  "required": true
                },
                "chapter_index": {
                  "_input_type": "IntInput",
                  "display_name": "Chapter Index",
                  "type": "int",
                  "value": 1,
                  "required": true
                },
                "context_sentences": {
                  "_input_type": "IntInput",
                  "display_name": "Context Sentences",
                  "type": "int",
                  "value": 2
                },
                "base_data_dir": {
                  "_input_type": "StrInput",
                  "display_name": "Data Directory Path",
                  "type": "str",
                  "value": "data/clean"
<<<<<<< HEAD
                },
                "chapters_file": {
                  "_input_type": "StrInput",
                  "display_name": "Chapters File Override",
                  "type": "str",
                  "value": ""
=======
>>>>>>> origin/langflow-multi-implement
                }
              }
            }
          }
        },
        {
          "id": "ABMBlockIterator-I1",
          "type": "genericNode",
          "position": {
            "x": 360,
            "y": 40
          },
          "selected": false,
          "data": {
            "id": "ABMBlockIterator-I1",
            "type": "ABMBlockIterator",
            "showNode": true,
            "node": {
              "display_name": "ABM Block Iterator",
              "description": "Process blocks with batch management",
              "icon": "repeat",
              "outputs": [
                {
                  "allows_loop": false,
                  "cache": true,
                  "display_name": "Current Utterance",
                  "group_outputs": false,
                  "method": "get_next_utterance",
                  "name": "current_utterance",
                  "selected": "Data",
                  "tool_mode": true,
                  "types": [
                    "Data"
                  ],
                  "value": "__UNDEFINED__"
                }
              ],
              "template": {
                "_type": "Component",
                "batch_size": {
                  "_input_type": "IntInput",
                  "display_name": "Batch Size",
                  "type": "int",
                  "value": 10
                },
<<<<<<< HEAD
              "start_chunk": {
=======
              "start_block": {
>>>>>>> origin/langflow-multi-implement
                "_input_type": "IntInput",
                    "display_name": "Start Block ID",
                    "type": "int",
                    "value": 1
                  },
<<<<<<< HEAD
              "max_chunks": {
=======
              "max_blocks": {
>>>>>>> origin/langflow-multi-implement
                "_input_type": "IntInput",
                      "display_name": "Max Blocks to Process",
                      "type": "int",
                      "value": 0
                    },
                    "dialogue_priority": {
                      "_input_type": "BoolInput",
                      "display_name": "Prioritize Dialogue Blocks",
                      "type": "bool",
                      "value": true
                    }
                  }
                }
              }
            },
            {
              "id": "ABMDialogueClassifier-C1",
              "type": "genericNode",
              "position": {
                "x": 640,
                "y": 40
              },
              "selected": false,
              "data": {
                "id": "ABMDialogueClassifier-C1",
                "type": "ABMDialogueClassifier",
                "showNode": true,
                "node": {
                  "display_name": "ABM Dialogue Classifier",
                  "description": "Classify dialogue vs narration and extract dialogue text",
                  "icon": "message-square",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Classification Result",
                      "group_outputs": false,
                      "method": "classify_utterance",
                      "name": "classification_result",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "utterance": {
                      "_input_type": "DataInput",
                      "display_name": "Utterance Payload",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    },
                    "use_llm": {
                      "_input_type": "BoolInput",
                      "display_name": "Use LLM",
                      "type": "bool",
                      "value": false
                    }
                  }
                }
              }
            },
            {
              "id": "ABMSpeakerAttribution-A1",
              "type": "genericNode",
              "position": {
                "x": 940,
                "y": 40
              },
              "selected": false,
              "data": {
                "id": "ABMSpeakerAttribution-A1",
                "type": "ABMSpeakerAttribution",
                "showNode": true,
                "node": {
                  "display_name": "ABM Speaker Attribution",
                  "description": "Heuristic speaker attribution with Narrator fallback",
                  "icon": "user",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Attribution Result",
                      "group_outputs": false,
                      "method": "attribute_speaker",
                      "name": "attribution_result",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "classification_result": {
                      "_input_type": "DataInput",
                      "display_name": "Classification Result",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    },
                    "default_narrator": {
                      "_input_type": "StrInput",
                      "display_name": "Default Narrator",
                      "type": "str",
                      "value": "Narrator"
                    }
                  }
                }
              }
            },
            {
              "id": "ABMResultsAggregator-G1",
              "type": "genericNode",
              "position": {
                "x": 1240,
                "y": 40
              },
              "selected": false,
              "data": {
                "id": "ABMResultsAggregator-G1",
                "type": "ABMResultsAggregator",
                "showNode": true,
                "node": {
                  "display_name": "ABM Results Aggregator",
                  "description": "Aggregate classifier + attribution results with text fallbacks",
                  "icon": "layers",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Aggregated Results",
                      "group_outputs": false,
                      "method": "aggregate_results",
                      "name": "aggregated_results",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "attribution_result": {
                      "_input_type": "DataInput",
                      "display_name": "Attribution Result",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    }
                  }
                }
              }
            },
            {
              "id": "ABMResultsToUtterances-U1",
              "type": "genericNode",
              "position": {
                "x": 1540,
                "y": 40
              },
              "selected": false,
              "data": {
                "id": "ABMResultsToUtterances-U1",
                "type": "ABMResultsToUtterances",
                "showNode": true,
                "node": {
                  "display_name": "ABM Results → Utterances",
                  "description": "Normalize to utterances with role/speaker defaults",
                  "icon": "table",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Utterances Data",
                      "group_outputs": false,
                      "method": "to_utterances",
                      "name": "utterances_data",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "aggregated_results": {
                      "_input_type": "DataInput",
                      "display_name": "Aggregated Results",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    }
                  }
                }
              }
            },
            {
              "id": "ABMAggregatedJsonlWriter-W1",
              "type": "genericNode",
              "position": {
                "x": 1840,
                "y": 40
              },
              "selected": false,
              "data": {
                "id": "ABMAggregatedJsonlWriter-W1",
                "type": "ABMAggregatedJsonlWriter",
                "showNode": true,
                "node": {
                  "display_name": "ABM Aggregated JSONL Writer",
                  "description": "Write utterances JSONL + meta",
                  "icon": "file-output",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Write Result",
                      "group_outputs": false,
                      "method": "write",
                      "name": "write_result",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "output_path": {
                      "_input_type": "StrInput",
                      "display_name": "Output Path",
                      "type": "str",
                      "value": "output/utterances.jsonl",
                      "required": true
                    },
                    "utterances_data": {
                      "_input_type": "DataInput",
                      "display_name": "Utterances Data",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    }
                  }
                }
              }
            },
            {
              "id": "ABMCastingDirector-CD1",
              "type": "genericNode",
              "position": {
                "x": 1540,
                "y": 280
              },
              "selected": false,
              "data": {
                "id": "ABMCastingDirector-CD1",
                "type": "ABMCastingDirector",
                "showNode": true,
                "node": {
                  "display_name": "ABM Casting Director",
                  "description": "Assign voices from palette to utterances",
                  "icon": "mic",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Casted Utterances",
                      "group_outputs": false,
                      "method": "assign_voices",
                      "name": "casted_utterances",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "utterances_data": {
                      "_input_type": "DataInput",
                      "display_name": "Utterances Data",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    }
                  }
                }
              }
            },
            {
              "id": "ABMUtteranceJsonlWriter-UW1",
              "type": "genericNode",
              "position": {
                "x": 1840,
                "y": 280
              },
              "selected": false,
              "data": {
                "id": "ABMUtteranceJsonlWriter-UW1",
                "type": "ABMUtteranceJsonlWriter",
                "showNode": true,
                "node": {
                  "display_name": "ABM Utterance JSONL Writer",
                  "description": "Write casted utterances to JSONL",
                  "icon": "file-output",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Written Data",
                      "group_outputs": false,
                      "method": "write_utterances",
                      "name": "written_data",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "output_path": {
                      "_input_type": "StrInput",
                      "display_name": "Output Path",
                      "type": "str",
                      "value": "output/utterances.casted.jsonl",
                      "required": true
                    },
                    "utterances_data": {
                      "_input_type": "DataInput",
                      "display_name": "Utterances Data",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": true,
                      "trace_as_input": true
                    }
                  }
                }
              }
            },
            {
              "id": "ABMPostgresClient-PG1",
              "type": "genericNode",
              "position": {
                "x": 2140,
                "y": 280
              },
              "selected": false,
              "data": {
                "id": "ABMPostgresClient-PG1",
                "type": "ABMPostgresClient",
                "showNode": true,
                "node": {
                  "display_name": "ABM Postgres Client",
                  "description": "Query/Execute PostgreSQL",
                  "icon": "database",
                  "outputs": [
                    {
                      "allows_loop": false,
                      "cache": true,
                      "display_name": "Execute Result",
                      "group_outputs": false,
                      "method": "execute",
                      "name": "execute_result",
                      "selected": "Data",
                      "tool_mode": true,
                      "types": [
                        "Data"
                      ],
                      "value": "__UNDEFINED__"
                    }
                  ],
                  "template": {
                    "_type": "Component",
                    "dsn": {
                      "_input_type": "MessageTextInput",
                      "display_name": "DSN (optional)",
                      "type": "str",
                      "value": ""
                    },
                    "host": {
                      "_input_type": "MessageTextInput",
                      "display_name": "Host",
                      "type": "str",
                      "value": "localhost"
                    },
                    "port": {
                      "_input_type": "IntInput",
                      "display_name": "Port",
                      "type": "int",
                      "value": 5432
                    },
                    "dbname": {
                      "_input_type": "MessageTextInput",
                      "display_name": "Database",
                      "type": "str",
                      "value": "postgres"
                    },
                    "user": {
                      "_input_type": "MessageTextInput",
                      "display_name": "User",
                      "type": "str",
                      "value": "postgres"
                    },
                    "password": {
                      "_input_type": "MessageTextInput",
                      "display_name": "Password",
                      "type": "str",
                      "value": ""
                    },
                    "autocommit": {
                      "_input_type": "BoolInput",
                      "display_name": "Autocommit",
                      "type": "bool",
                      "value": true
                    },
                    "sql": {
                      "_input_type": "MessageTextInput",
                      "display_name": "SQL",
                      "type": "str",
                      "value": "INSERT INTO abm_runs(output_file, utterances_written) VALUES (%(output_file)s, %(utterances_written)s)"
                    },
                    "params": {
                      "_input_type": "DataInput",
                      "display_name": "Parameters",
                      "type": "other",
                      "input_types": [
                        "Data"
                      ],
                      "required": false
                    },
                    "fetch_limit": {
                      "_input_type": "IntInput",
                      "display_name": "Fetch Limit",
                      "type": "int",
                      "value": 1000
                    }
                  }
                }
              }
            }
          ],
          "viewport": {
            "x": 0,
            "y": 0,
            "zoom": 0.85
          }
        },
        "description": "Comprehensive ABM pipeline using available components: Loader → Iterator → Dialogue Classifier → Speaker Attribution → Aggregator → (Normalizer → Writer) + (Casting → Utterance Writer) → Postgres",
        "endpoint_name": null,
        "id": "abm_full_pipeline_v15",
        "is_component": false,
        "last_tested_version": "1.5.0.post2",
        "name": "ABM Full Pipeline (v1.5)",
        "tags": [
          "abm",
          "full",
          "db"
        ]
      }
