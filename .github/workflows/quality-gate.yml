name: Quality Gate

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ "**" ]
    paths:
      - '**/*.py'
      - 'src/**'
      - 'Makefile'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - '.github/workflows/quality-gate.yml'
  push:
    branches: [ 'main' ]
    paths:
      - '**/*.py'
      - 'src/**'
      - 'Makefile'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - '.github/workflows/quality-gate.yml'

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: requirements-dev.txt

      - name: Cache uv/pip downloads
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/uv
          key: ${{ runner.os }}-py311-uv-${{ hashFiles('requirements*.txt') }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-py311-uv-

      - name: Install uv
        run: python -m pip install -U pip uv

      - name: Install dev dependencies (uv)
        run: uv pip install --system -r requirements-dev.txt

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-py311-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-precommit-py311-

      - name: Run quality gate
        env:
          PYTHONPATH: src
        run: |
          make quality_gate COMP_PATH=src || (echo "Quality gate failed" && exit 1)

      - name: Docs link check
        run: make docs_link_check || (echo "Docs link check failed (non-blocking)" && true)

      - name: Docs lint (mdformat + PyMarkdown)
        run: make docs_lint || (echo "Docs lint failed (non-blocking)" && true)

      - name: pre-commit (selected)
        run: pre-commit run -a mdformat pymarkdown || (echo "pre-commit docs format/lint failed (non-blocking)" && true)
