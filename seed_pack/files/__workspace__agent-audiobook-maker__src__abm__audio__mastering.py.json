{
  "file": "/workspace/agent-audiobook-maker/src/abm/audio/mastering.py",
  "module": "abm.audio",
  "summary": "Simple mastering utilities for audiobook audio.",
  "top_level_symbols": [
    {
      "name": "measure_loudness",
      "kind": "function",
      "signature": "(y, sr)",
      "doc": "Return integrated loudness (LUFS)."
    },
    {
      "name": "measure_true_peak",
      "kind": "function",
      "signature": "(y, sr, oversample)",
      "doc": "Estimate true peak in dBFS via optional oversampling. Args:\n    y: Mono audio in float32 range ``[-1, 1]``."
    },
    {
      "name": "limit_peaks",
      "kind": "function",
      "signature": "(y, peak_dbfs)",
      "doc": "Limit waveform peaks to the given dBFS value."
    },
    {
      "name": "add_head_tail_silence",
      "kind": "function",
      "signature": "(y, sr, head_ms, tail_ms)",
      "doc": "Pad audio with silence before and after."
    },
    {
      "name": "master",
      "kind": "function",
      "signature": "(y, sr, target_lufs, peak_dbfs, head_ms, tail_ms, enable_true_peak, true_peak_ceiling_dbfs, true_peak_oversample)",
      "doc": "Master audio to target loudness and peak limits. Processing order: loudness match \u2192 peak limit \u2192 optional true-peak safety \u2192\nhead/tail silence."
    }
  ],
  "io_contracts": {
    "inputs": [],
    "outputs": [],
    "file_patterns_written": [],
    "stdout_side_effects": []
  },
  "dependencies": {
    "imports_internal": [
      "abm.audio.assembly"
    ],
    "imports_external": [
      "__future__",
      "logging",
      "numpy",
      "pyloudnorm",
      "scipy"
    ]
  },
  "errors_raised": [],
  "env_vars": []
}