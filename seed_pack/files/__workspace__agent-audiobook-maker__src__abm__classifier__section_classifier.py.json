{
  "file": "/workspace/agent-audiobook-maker/src/abm/classifier/section_classifier.py",
  "module": "abm.classifier",
  "summary": "Unknown",
  "top_level_symbols": [
    {
      "name": "canon_title",
      "kind": "function",
      "signature": "(s)",
      "doc": "Unknown"
    },
    {
      "name": "_load_jsonl_blocks",
      "kind": "function",
      "signature": "(path)",
      "doc": "Unknown"
    },
    {
      "name": "_find_toc_heading",
      "kind": "function",
      "signature": "(blocks)",
      "doc": "Unknown"
    },
    {
      "name": "_parse_toc_items",
      "kind": "function",
      "signature": "(blocks, start_idx, end_idx)",
      "doc": "Unknown"
    },
    {
      "name": "_is_body_heading_block",
      "kind": "function",
      "signature": "(block)",
      "doc": "Return regex match if this block is a plausible standalone heading. Uses enriched fields when available: require 1 line, and short word/char counts."
    },
    {
      "name": "_looks_like_toc_item_line",
      "kind": "function",
      "signature": "(text)",
      "doc": "Heuristic: line resembles a TOC entry (strict or fallback)."
    },
    {
      "name": "_match_chapters",
      "kind": "function",
      "signature": "(blocks, toc_entries, start_search)",
      "doc": "Unknown"
    },
    {
      "name": "classify_blocks",
      "kind": "function",
      "signature": "(jsonl_path)",
      "doc": "Unknown"
    }
  ],
  "io_contracts": {
    "inputs": [],
    "outputs": [],
    "file_patterns_written": [],
    "stdout_side_effects": []
  },
  "dependencies": {
    "imports_internal": [],
    "imports_external": [
      "__future__",
      "json",
      "re",
      "typing",
      "unicodedata"
    ]
  },
  "errors_raised": [
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    },
    {
      "type": "ValueError",
      "when": "Unknown"
    }
  ],
  "env_vars": []
}