flowchart LR
  subgraph Dev["Local-first (KISS today)"]
    CLI["CLI (ingest, annotate)"]
    PDF(("PDF"))
    TXT(("Simple TXT"))

    %% Upstream structuring stages (added)
    SectionClassifier["Section Classifier"]
    Classified(("classified/front_matter.json | toc.json |\nchapters_section.json | back_matter.json"))
    Chapterizer["Chapterizer"]
    TxtStructured["TXT→Structured (paragraphs[])"]

    JSONStruct(("Structured JSON (manifest + chapters)"))
    Annot["Annotation v1 (segmentation: dialogue/narration)"]
    Artifacts(("data/clean/<book>/<chapter>.json\n<pdf_stem>_volume.json"))
    Annos(("data/annotations/<book>/<chapter>.jsonl"))
  end

  %% Ingest and structuring pipeline
  CLI --> PDF --> TXT --> SectionClassifier --> Classified --> Chapterizer --> TxtStructured --> JSONStruct --> Artifacts
  Artifacts --> Annot --> Annos

  subgraph Later["Later (roadmap)"]
    Casting["Casting (character bible)"]
    SSML["SSML Assembly"]
    TTS["TTS (XTTS/Piper)"]
    Stems[("data/stems/…")]
    Renders[("data/renders/<book>/<chapter>.wav")]
    Master[("book_master.wav")]
    Orchestrator["Dagster / LangGraph"]
    DB[("Postgres (JSONB)")]
  end

  Annos -.-> Casting -.-> SSML -.-> TTS --> Stems --> Renders --> Master
  Orchestrator -.controls.-> JSONStruct
  Orchestrator -.controls.-> Annot
  Orchestrator -.controls.-> TTS

  Artifacts -.sync.-> DB
  Annos -.sync.-> DB
  Renders -.sync.-> DB
